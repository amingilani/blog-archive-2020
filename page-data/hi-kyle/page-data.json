{"componentChunkName":"component---node-modules-gatsby-theme-medium-to-own-blog-src-templates-blog-post-js","path":"/hi-kyle/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"http://localhost:8000","githubUrl":"https://github.com/amingilani/blog"}},"mdx":{"fields":{"slug":"/hi-kyle/"},"excerpt":"Hi Kyle > What does NOT work, however, is updating the slug. I can only assume this is some kind of Rails safeguard but I can’t seem to find…","timeToRead":1,"frontmatter":{"title":"Hi Kyle","description":">What does NOT work, however, is updating the slug. I can only assume this is some kind of Rails safeguard but I can’t seem to find…","categories":[],"date":"November 01, 2018","canonical_link":"https://medium.com/@gilani/hi-kyle-b0bcd42ec3cb"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hi Kyle\",\n  \"description\": \">What does NOT work, however, is updating the slug. I can only assume this is some kind of Rails safeguard but I can’t seem to find…\",\n  \"date\": \"2018-11-01T15:18:26.420Z\",\n  \"categories\": [],\n  \"published\": true,\n  \"canonical_link\": \"https://medium.com/@gilani/hi-kyle-b0bcd42ec3cb\",\n  \"redirect_from\": [\"/hi-kyle-b0bcd42ec3cb\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hi Kyle\"), mdx(\"p\", null, \">\", \"What does NOT work, however, is updating the slug. I can only assume this is some kind of Rails safeguard but I can\\u2019t seem to find anything when searching Google about it.\"), mdx(\"p\", null, \"Unfortunately, that\\u2019s not how overriding a getter works, there\\u2019s likely a simpler explanation.\"), mdx(\"p\", null, \">\", \"When I send an updated set of params to my controller\\u2019s update action, every parameter is updated EXCEPT for the slug.\"), mdx(\"p\", null, \"This tells me that the model is either not receiving the param, or ignoring it. Have you permitted the param in your controller?\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"allWebMentionEntry":{"nodes":[]}},"pageContext":{"id":"d0cb6eaf-dc9c-59d9-a31b-a683330f7dee","previous":{"id":"f4b27bcc-d5b6-5b10-9cfc-c0014d47e269","fields":{"slug":"/i-bought-a-usb-flash-drive-off-of-ali-express-and-it-was-fine-here's-how-you-can-check-yours/","published":true},"frontmatter":{"redirect_from":["/i-bought-a-usb-flash-drive-off-of-ali-express-and-it-was-fine-heres-how-you-can-check-yours-3671c1c97aee"],"title":"I bought a USB flash drive off of Ali Express, and it was fine. Here’s how you can check yours."}},"next":{"id":"f79f2047-9f46-5df9-9eda-030a3cf9581e","fields":{"slug":"/that's-a-great-idea-david!/","published":true},"frontmatter":{"redirect_from":["/thats-a-great-idea-david-f4a3db15e549"],"title":"That’s a great idea David!"}},"permalink":"http://localhost:8000/hi-kyle/","themeOptions":{"plugins":[],"config":{"title":"Amin Shah Gilani","description":"Amin Shah Gilani's blog","shortBio":"","bio":"Founder. Developer. Spaces over tabs. Atom over your favorite X.","author":"Amin Shah Gilani","githubUrl":"https://github.com/amingilani/blog","siteUrl":"http://localhost:8000","social":{"twitter":"amingilani","medium":"@gilani","facebook":"","github":"","linkedin":"","instagram":""},"goatCounterCode":null}}}}}