{"componentChunkName":"component---node-modules-gatsby-theme-medium-to-own-blog-src-templates-blog-post-js","path":"/hey-kyle/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"http://localhost:8000","githubUrl":"https://github.com/amingilani/blog"}},"mdx":{"fields":{"slug":"/hey-kyle/"},"excerpt":"Hey Kyle I’m intrigued because that’s not how overriding a getter method works :) you mention that every other method is updated, without an…","timeToRead":1,"frontmatter":{"title":"Hey Kyle","description":"I’m intrigued because that’s not how overriding a getter method works :) you mention that every other method is updated, without an error…","categories":[],"date":"May 02, 2020","canonical_link":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hey Kyle\",\n  \"description\": \"I’m intrigued because that’s not how overriding a getter method works :) you mention that every other method is updated, without an error…\",\n  \"date\": \"2020-05-02T22:47:00.598Z\",\n  \"categories\": [],\n  \"published\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hey Kyle\"), mdx(\"p\", null, \"I\\u2019m intrigued because that\\u2019s not how overriding a getter method works\\xA0:) you mention that every other method is updated, without an error being raised? That tells me that the model either isn\\u2019t receiving the param or it\\u2019s ignoring the ones it\\u2019s receiving.\"), mdx(\"p\", null, \"First check to see if you\\u2019re permitting the parameter in your controller before you pass it to update\\xA0:)\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"allWebMentionEntry":{"nodes":[]}},"pageContext":{"id":"1e8afc4e-be2b-50d3-b307-cb4c903016e5","previous":null,"next":null,"permalink":"http://localhost:8000/hey-kyle/","themeOptions":{"plugins":[],"config":{"title":"Amin Shah Gilani","description":"Amin Shah Gilani's blog","shortBio":"","bio":"Founder. Developer. Spaces over tabs. Atom over your favorite X.","author":"Amin Shah Gilani","githubUrl":"https://github.com/amingilani/blog","siteUrl":"http://localhost:8000","social":{"twitter":"amingilani","medium":"@gilani","facebook":"","github":"","linkedin":"","instagram":""},"goatCounterCode":null}}}}}